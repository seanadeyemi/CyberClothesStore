@using Store.Domain
@model Store.UI.Models.ClothViewModel

@{
    Layout = null;
    ViewBag.Title = "Add";
}

<h2>New Cloth</h2>

@using (Html.BeginForm("AddCloth", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
      
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ShortDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ShortDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ShortDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LongDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.LongDescription,  new {id = "cke", @class = "ckeditor" })
                @Html.ValidationMessageFor(model => model.LongDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="ImageFile" class="imgInp form-control" accept=".png,.jpg,.jpeg,.gif,.tif" required />
                
            </div>
            <div class="col-md-offset-2 col-md-10" >
                <img src="@Url.Content("~/Content/Images/")@Model.ImageUrl" width="150" height="150" class="img-upload" alt="Cloth Image" />


            </div>
           
        </div>

        <div class="form-group">

        
        </div>


        


        <div class="form-group">
            @Html.LabelFor(model => model.InStock, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.InStock, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.InStock, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CategoryId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownList("Categories", (IEnumerable<SelectListItem>)ViewBag.Categories, "Select Category", htmlAttributes: new { @class = "form-control col-md-10" })*@
                @*@Html.DropDownList("Categories", "Select Category")*@
                @*@Html.DropDownList( "Categories", null, new { @class = "form-control" })*@
                @*@Html.DropDownListFor(model => model.CategoryId, (IEnumerable<SelectListItem>)ViewBag.Categories, "Select Category", new { @class = "form-control" })*@
                @*@Html.DropDownListFor(model => model.CategoryName, new SelectList((IEnumerable<Category>)ViewBag.Categories, "Id", "Name"), "Select Category")*@

                
                
                @Html.DropDownListFor(model => model.CategoryName, (IEnumerable<SelectListItem>)ViewBag.Categories, "Select Category", new { @class = "form-control" })



               
            </div>
        </div >


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type = "submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script type = "text/javascript" >
    CKEDITOR.replace('cke');
</script>


@*<script>

    $(function () {

        AttachCkEditor();
    });



    function AttachCkEditor() {
        $(".ckeditor").ckeditor(function () { /* callback code */ }, options);
    }

</script>*@
